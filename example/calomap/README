############################################################
#
#  Extended example and test program for LCCD 
#
#  F.Gaede, DESY
###########################################################


The example consistes of two 'programs':
  
  createmaps.cc

and a Marlin processor:

  CaloMapProcessor.h[.cc]


createmaps: 
----------------
simulates a new random channelID to cellID mapping for
several runs of a simple calorimeter and creates the corresponding
conditions collections (ChannelToCellID.h).

Several output files are created:

 run0000_rawcalo.slcio - run0009_rawcalo.slcio
 -> some data files with RawCalorimeterHits that have the random channelID as cellID
  and the conditions collections in the first event


 condDB_channelmap_HEAD_#CURRENTTIMESTAMP#.slcio 
 -> simple LCIO files holding the conditions data for every run


 condDB_channelmap_HEAD_#DATE#_#TIME#.slcio
 -> condDBFile that holds the conditions data for all runs


and corresponding entries are made to the conditions database in the folder
"/calo/channelmap" with the apropriate time stamps.



CaloMapProcessor
-----------------
Processor that demonstrates and tests the usage of marlin::ConditionsProcessor.
The code creates and registers a map for the channel to cellID mapping and
checks whether the proper random mapping is inverted.

By modifying the user can run the _same_ application to perform the check with all
possible forms of input for the conditions data.

Note: you have to modify the actual timestamps in steer.xml (my.steer) after every run of

   createmaps








